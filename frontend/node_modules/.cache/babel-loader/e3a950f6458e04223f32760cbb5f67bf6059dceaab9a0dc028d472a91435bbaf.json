{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Paper,Container,Grid,Card,CardContent,Chip,Divider,List,ListItem,ListItemText,ListItemIcon,Avatar,LinearProgress}from'@mui/material';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip as RechartsTooltip,ResponsiveContainer,PieChart,Pie,Cell,AreaChart,Area,RadarChart,PolarGrid,PolarAngleAxis,PolarRadiusAxis,Radar}from'recharts';import{TrendingUp,TrendingDown,Favorite,Message,Person,EmojiEmotions,Psychology,Speed,Star,LocalFireDepartment,TrendingFlat,PsychologyAlt,MessageOutlined,Timeline,Insights,Analytics as AnalyticsIcon,SentimentSatisfied,SentimentDissatisfied,SentimentNeutral,Flag}from'@mui/icons-material';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Analytics=()=>{var _analyticsData$sentim,_analyticsData$sentim2,_analyticsData$sentim3,_analyticsData$engage,_analyticsData$topPer,_analyticsData$goalsP,_analyticsData$topPer2,_analyticsData$topPer3;const[profiles,setProfiles]=useState([]);const[analytics,setAnalytics]=useState({});const[loading,setLoading]=useState(true);useEffect(()=>{fetchData();},[]);const fetchData=async()=>{try{const[profilesRes,analyticsRes]=await Promise.all([axios.get('https://3e79a6ace678.ngrok-free.app/api/profiles'),axios.get('https://3e79a6ace678.ngrok-free.app/api/analytics')]);// Convert profiles object to array\nconst profilesArray=Object.entries(profilesRes.data).map(_ref=>{let[id,profile]=_ref;return{id,...profile};});setProfiles(profilesArray);setAnalytics(analyticsRes.data);}catch(error){console.error('Error fetching analytics:',error);}finally{setLoading(false);}};// Calculate advanced analytics\nconst calculateAnalytics=()=>{if(!profiles.length)return{};const totalMessages=profiles.reduce((sum,p)=>{var _p$previous_messages;return sum+(((_p$previous_messages=p.previous_messages)===null||_p$previous_messages===void 0?void 0:_p$previous_messages.length)||0);},0);const totalLikes=profiles.reduce((sum,p)=>{var _p$likes;return sum+(((_p$likes=p.likes)===null||_p$likes===void 0?void 0:_p$likes.length)||0);},0);const totalPersonalityTags=profiles.reduce((sum,p)=>{var _p$personality_tags;return sum+(((_p$personality_tags=p.personality_tags)===null||_p$personality_tags===void 0?void 0:_p$personality_tags.length)||0);},0);const totalInsideJokes=profiles.reduce((sum,p)=>{var _p$inside_jokes;return sum+(((_p$inside_jokes=p.inside_jokes)===null||_p$inside_jokes===void 0?void 0:_p$inside_jokes.length)||0);},0);// Message breakdown (hers vs mine)\nconst messageBreakdown=profiles.map(profile=>{const messages=profile.previous_messages||[];const herMessages=messages.filter(m=>m.from!=='Me').length;const myMessages=messages.filter(m=>m.from==='Me').length;return{name:profile.name||profile.username||'Unknown',herMessages,myMessages,total:messages.length};});// Response time analysis\nconst responseTimeData=profiles.map(profile=>{const messages=profile.previous_messages||[];let totalResponseTime=0;let responseCount=0;for(let i=1;i<messages.length;i++){const currentMsg=messages[i];const prevMsg=messages[i-1];if(currentMsg.from!==prevMsg.from){// Different sender\nconst currentTime=new Date(currentMsg.timestamp);const prevTime=new Date(prevMsg.timestamp);const diffHours=(currentTime-prevTime)/(1000*60*60);if(diffHours>0&&diffHours<168){// Between 0 and 7 days\ntotalResponseTime+=diffHours;responseCount++;}}}const avgResponseTime=responseCount>0?totalResponseTime/responseCount:0;return{name:profile.name||profile.username||'Unknown',avgResponseTime:Math.round(avgResponseTime*10)/10,responseCount};});// Top words and emojis analysis\nconst allWords={};const allEmojis={};const allCompliments={};profiles.forEach(profile=>{const messages=profile.previous_messages||[];const profileName=profile.name||profile.username||'Unknown';messages.forEach(msg=>{if(msg.text){// Count words\nconst words=msg.text.toLowerCase().match(/\\b\\w+\\b/g)||[];words.forEach(word=>{if(word.length>2){// Skip short words\nallWords[word]=(allWords[word]||0)+1;}});// Count emojis\nconst emojis=msg.text.match(/[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}]/gu)||[];emojis.forEach(emoji=>{allEmojis[emoji]=(allEmojis[emoji]||0)+1;});// Count compliments\nconst complimentWords=/beautiful|gorgeous|stunning|amazing|wonderful|fantastic|incredible|perfect|lovely|cute|hot|sexy|attractive|charming|elegant|graceful|radiant|mesmerizing|breathtaking|divine/gi;const compliments=msg.text.match(complimentWords)||[];compliments.forEach(compliment=>{allCompliments[compliment.toLowerCase()]=(allCompliments[compliment.toLowerCase()]||0)+1;});}});});// Get top words, emojis, and compliments\nconst topWords=Object.entries(allWords).sort((_ref2,_ref3)=>{let[,a]=_ref2;let[,b]=_ref3;return b-a;}).slice(0,10).map(_ref4=>{let[word,count]=_ref4;return{word,count};});const topEmojis=Object.entries(allEmojis).sort((_ref5,_ref6)=>{let[,a]=_ref5;let[,b]=_ref6;return b-a;}).slice(0,10).map(_ref7=>{let[emoji,count]=_ref7;return{emoji,count};});const topCompliments=Object.entries(allCompliments).sort((_ref8,_ref9)=>{let[,a]=_ref8;let[,b]=_ref9;return b-a;}).slice(0,10).map(_ref0=>{let[compliment,count]=_ref0;return{compliment,count};});// Green and red flags detection\nconst flagsData=profiles.map(profile=>{const messages=profile.previous_messages||[];const allText=messages.map(m=>m.text||'').join(' ').toLowerCase();// Green flags\nconst greenFlags={respectful:/respect|respectful|polite|kind|gentle|considerate/gi,interested:/ask|question|curious|interested|tell me|share/gi,supportive:/support|encourage|proud|happy for|excited for/gi,communicative:/communicate|talk|discuss|share|open/gi,consistent:/consistent|reliable|dependable|always/gi,positive:/positive|optimistic|happy|joy|excited/gi};// Red flags\nconst redFlags={controlling:/control|dominate|must|should|have to|demand/gi,disrespectful:/disrespect|rude|mean|hate|dislike/gi,inconsistent:/inconsistent|unreliable|flake|cancel|no show/gi,negative:/negative|pessimistic|angry|upset|frustrated/gi,possessive:/possessive|jealous|mine|only|exclusive/gi,aggressive:/aggressive|angry|yell|shout|fight/gi};const greenFlagCount=Object.values(greenFlags).reduce((sum,pattern)=>sum+(allText.match(pattern)||[]).length,0);const redFlagCount=Object.values(redFlags).reduce((sum,pattern)=>sum+(allText.match(pattern)||[]).length,0);return{name:profile.name||profile.username||'Unknown',greenFlags:greenFlagCount,redFlags:redFlagCount,flagRatio:greenFlagCount>0?greenFlagCount/(greenFlagCount+redFlagCount)*100:0};});// Message activity over time\nconst messageActivity=profiles.map(profile=>{var _profile$previous_mes,_profile$likes,_profile$personality_,_profile$inside_jokes;return{name:profile.name||profile.username||'Unknown',messages:((_profile$previous_mes=profile.previous_messages)===null||_profile$previous_mes===void 0?void 0:_profile$previous_mes.length)||0,likes:((_profile$likes=profile.likes)===null||_profile$likes===void 0?void 0:_profile$likes.length)||0,personality:((_profile$personality_=profile.personality_tags)===null||_profile$personality_===void 0?void 0:_profile$personality_.length)||0,jokes:((_profile$inside_jokes=profile.inside_jokes)===null||_profile$inside_jokes===void 0?void 0:_profile$inside_jokes.length)||0};});// Sentiment analysis\nconst sentimentData=profiles.map(profile=>{const messages=profile.previous_messages||[];const positiveWords=/love|great|happy|fun|😍|😄|😊|😘|flirt|kiss|cute|hot|babe|sweet|yes|sure|haha|lol|amazing|awesome|excited|enjoy|like|good|nice|thanks|thank you|see you|call|date|meet|voice|video/gi;const negativeWords=/angry|mad|annoy|hate|😠|😡|wtf|ugh|no|bad|terrible|awful|disappointed|sad|cry|miss|lonely|😢|😭/gi;let positiveCount=0;let negativeCount=0;messages.forEach(msg=>{if(msg.text){positiveCount+=(msg.text.match(positiveWords)||[]).length;negativeCount+=(msg.text.match(negativeWords)||[]).length;}});return{name:profile.name||profile.username||'Unknown',positive:positiveCount,negative:negativeCount,neutral:Math.max(0,messages.length-positiveCount-negativeCount)};});// Engagement metrics\nconst engagementData=profiles.map(profile=>{var _profile$inside_jokes2,_profile$inside_jokes3;const messages=profile.previous_messages||[];const emojiCount=messages.reduce((sum,msg)=>{var _msg$text;return sum+(((_msg$text=msg.text)===null||_msg$text===void 0?void 0:_msg$text.match(/[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}]/gu))||[]).length;},0);return{name:profile.name||profile.username||'Unknown',messages:messages.length,emojis:emojiCount,jokes:((_profile$inside_jokes2=profile.inside_jokes)===null||_profile$inside_jokes2===void 0?void 0:_profile$inside_jokes2.length)||0,engagement:Math.min(100,messages.length*2+emojiCount*3+(((_profile$inside_jokes3=profile.inside_jokes)===null||_profile$inside_jokes3===void 0?void 0:_profile$inside_jokes3.length)||0)*5)};});// Top performers\nconst topPerformers=profiles.map(profile=>{var _profile$previous_mes2,_profile$likes2,_profile$personality_2,_profile$inside_jokes4,_profile$previous_mes3,_profile$likes3,_profile$personality_3,_profile$inside_jokes5;return{name:profile.name||profile.username||'Unknown',messages:((_profile$previous_mes2=profile.previous_messages)===null||_profile$previous_mes2===void 0?void 0:_profile$previous_mes2.length)||0,likes:((_profile$likes2=profile.likes)===null||_profile$likes2===void 0?void 0:_profile$likes2.length)||0,personality:((_profile$personality_2=profile.personality_tags)===null||_profile$personality_2===void 0?void 0:_profile$personality_2.length)||0,jokes:((_profile$inside_jokes4=profile.inside_jokes)===null||_profile$inside_jokes4===void 0?void 0:_profile$inside_jokes4.length)||0,score:(((_profile$previous_mes3=profile.previous_messages)===null||_profile$previous_mes3===void 0?void 0:_profile$previous_mes3.length)||0)+(((_profile$likes3=profile.likes)===null||_profile$likes3===void 0?void 0:_profile$likes3.length)||0)*2+(((_profile$personality_3=profile.personality_tags)===null||_profile$personality_3===void 0?void 0:_profile$personality_3.length)||0)*3+(((_profile$inside_jokes5=profile.inside_jokes)===null||_profile$inside_jokes5===void 0?void 0:_profile$inside_jokes5.length)||0)*5};}).sort((a,b)=>b.score-a.score).slice(0,5);// Conversation goals progress\nconst goalsProgress=profiles.filter(p=>{var _p$conversation_goals;return((_p$conversation_goals=p.conversation_goals)===null||_p$conversation_goals===void 0?void 0:_p$conversation_goals.length)>0;}).map(profile=>({name:profile.name||profile.username||'Unknown',goal:profile.conversation_goals[0],progress:Math.min(100,Math.random()*100)// Placeholder - could be calculated based on goal keywords\n}));// Time-based activity (last 7 days simulation)\nconst timeActivity=[{day:'Mon',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3},{day:'Tue',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3},{day:'Wed',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3},{day:'Thu',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3},{day:'Fri',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3},{day:'Sat',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3},{day:'Sun',messages:Math.floor(Math.random()*20)+5,replies:Math.floor(Math.random()*15)+3}];return{totalMessages,totalLikes,totalPersonalityTags,totalInsideJokes,messageBreakdown,responseTimeData,topWords,topEmojis,topCompliments,flagsData,messageActivity,sentimentData,engagementData,topPerformers,goalsProgress,timeActivity,averageMessagesPerProfile:Math.round(totalMessages/profiles.length),averageLikesPerProfile:Math.round(totalLikes/profiles.length),averagePersonalityPerProfile:Math.round(totalPersonalityTags/profiles.length)};};const analyticsData=calculateAnalytics();const COLORS=['#0088FE','#00C49F','#FFBB28','#FF8042','#8884D8','#82CA9D'];if(loading){return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(LinearProgress,{}),/*#__PURE__*/_jsx(Typography,{children:\"Loading analytics...\"})]});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",sx:{py:4,fontFamily:'Inter, -apple-system, BlinkMacSystemFont, sans-serif',fontSize:16,lineHeight:1.4},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:4},children:[/*#__PURE__*/_jsx(AnalyticsIcon,{sx:{mr:2,fontSize:40,color:'primary.main'}}),/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h1\",children:\"Dating Analytics Dashboard\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'grid',gridTemplateColumns:{xs:'1fr',sm:'1fr 1fr',md:'1fr 1fr 1fr 1fr'},gap:{xs:3,md:4},mb:5},children:[/*#__PURE__*/_jsxs(Paper,{className:\"metric-card\",sx:{p:3,borderRadius:3,minHeight:140,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',boxShadow:'0 4px 12px rgba(0,0,0,0.1)',background:'rgba(255,255,255,0.95)',backdropFilter:'blur(10px)',transition:'all 0.2s cubic-bezier(0.4,0,0.2,1)','&:hover':{boxShadow:'0 8px 24px rgba(0,0,0,0.15)',transform:'translateY(-2px)'}},children:[/*#__PURE__*/_jsx(Message,{sx:{fontSize:32,color:'#3b82f6',mb:1}}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:40,fontWeight:300,color:'#1a1a1a',mb:0.5},children:analyticsData.totalMessages||0}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:14,fontWeight:500,color:'#6b7280',opacity:0.6,letterSpacing:0.5},children:\"Total Messages\"})]}),/*#__PURE__*/_jsxs(Paper,{className:\"metric-card\",sx:{p:3,borderRadius:3,minHeight:140,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',boxShadow:'0 4px 12px rgba(0,0,0,0.1)',background:'rgba(255,255,255,0.95)',backdropFilter:'blur(10px)',transition:'all 0.2s cubic-bezier(0.4,0,0.2,1)','&:hover':{boxShadow:'0 8px 24px rgba(0,0,0,0.15)',transform:'translateY(-2px)'}},children:[/*#__PURE__*/_jsx(Person,{sx:{fontSize:32,color:'#10b981',mb:1}}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:40,fontWeight:300,color:'#1a1a1a',mb:0.5},children:profiles.length}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:14,fontWeight:500,color:'#6b7280',opacity:0.6,letterSpacing:0.5},children:\"Active Conversations\"})]}),/*#__PURE__*/_jsxs(Paper,{className:\"metric-card\",sx:{p:3,borderRadius:3,minHeight:140,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',boxShadow:'0 4px 12px rgba(0,0,0,0.1)',background:'rgba(255,255,255,0.95)',backdropFilter:'blur(10px)',transition:'all 0.2s cubic-bezier(0.4,0,0.2,1)','&:hover':{boxShadow:'0 8px 24px rgba(0,0,0,0.15)',transform:'translateY(-2px)'}},children:[/*#__PURE__*/_jsx(Favorite,{sx:{fontSize:32,color:'#ef4444',mb:1}}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:40,fontWeight:300,color:'#1a1a1a',mb:0.5},children:analyticsData.totalLikes||0}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:14,fontWeight:500,color:'#6b7280',opacity:0.6,letterSpacing:0.5},children:\"Total Likes Discovered\"})]}),/*#__PURE__*/_jsxs(Paper,{className:\"metric-card\",sx:{p:3,borderRadius:3,minHeight:140,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',boxShadow:'0 4px 12px rgba(0,0,0,0.1)',background:'rgba(255,255,255,0.95)',backdropFilter:'blur(10px)',transition:'all 0.2s cubic-bezier(0.4,0,0.2,1)','&:hover':{boxShadow:'0 8px 24px rgba(0,0,0,0.15)',transform:'translateY(-2px)'}},children:[/*#__PURE__*/_jsx(EmojiEmotions,{sx:{fontSize:32,color:'#f59e0b',mb:1}}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:40,fontWeight:300,color:'#1a1a1a',mb:0.5},children:analyticsData.totalInsideJokes||0}),/*#__PURE__*/_jsx(Typography,{sx:{fontSize:14,fontWeight:500,color:'#6b7280',opacity:0.6,letterSpacing:0.5},children:\"Inside Jokes\"})]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:8,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(MessageOutlined,{sx:{mr:1,verticalAlign:'middle'}}),\"Message Activity by Profile\"]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(BarChart,{data:analyticsData.messageActivity,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"messages\",fill:\"#8884d8\"})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:4,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Psychology,{sx:{mr:1,verticalAlign:'middle'}}),\"Sentiment Overview\"]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:[{name:'Positive',value:((_analyticsData$sentim=analyticsData.sentimentData)===null||_analyticsData$sentim===void 0?void 0:_analyticsData$sentim.reduce((sum,d)=>sum+d.positive,0))||0},{name:'Neutral',value:((_analyticsData$sentim2=analyticsData.sentimentData)===null||_analyticsData$sentim2===void 0?void 0:_analyticsData$sentim2.reduce((sum,d)=>sum+d.neutral,0))||0},{name:'Negative',value:((_analyticsData$sentim3=analyticsData.sentimentData)===null||_analyticsData$sentim3===void 0?void 0:_analyticsData$sentim3.reduce((sum,d)=>sum+d.negative,0))||0}],cx:\"50%\",cy:\"50%\",outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",children:COLORS.map((color,index)=>/*#__PURE__*/_jsx(Cell,{fill:color},`cell-${index}`))}),/*#__PURE__*/_jsx(RechartsTooltip,{})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Speed,{sx:{mr:1,verticalAlign:'middle'}}),\"Engagement Analysis\"]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(RadarChart,{data:(_analyticsData$engage=analyticsData.engagementData)===null||_analyticsData$engage===void 0?void 0:_analyticsData$engage.slice(0,5),children:[/*#__PURE__*/_jsx(PolarGrid,{}),/*#__PURE__*/_jsx(PolarAngleAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(PolarRadiusAxis,{}),/*#__PURE__*/_jsx(Radar,{name:\"Engagement\",dataKey:\"engagement\",stroke:\"#8884d8\",fill:\"#8884d8\",fillOpacity:0.6}),/*#__PURE__*/_jsx(RechartsTooltip,{})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Timeline,{sx:{mr:1,verticalAlign:'middle'}}),\"Weekly Activity Trend\"]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(AreaChart,{data:analyticsData.timeActivity,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"day\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"messages\",stackId:\"1\",stroke:\"#8884d8\",fill:\"#8884d8\"}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"replies\",stackId:\"1\",stroke:\"#82ca9d\",fill:\"#82ca9d\"})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400,display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Star,{sx:{mr:1,verticalAlign:'middle'}}),\"Top Performers\"]}),/*#__PURE__*/_jsx(Box,{sx:{flex:1,overflowY:'auto'},children:/*#__PURE__*/_jsx(List,{children:(_analyticsData$topPer=analyticsData.topPerformers)===null||_analyticsData$topPer===void 0?void 0:_analyticsData$topPer.map((performer,index)=>/*#__PURE__*/_jsxs(ListItem,{sx:{m:0,p:0},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:index<3?'gold':'grey.400'},children:index+1})}),/*#__PURE__*/_jsx(ListItemText,{primary:performer.name,secondary:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`${performer.messages} messages`,sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`${performer.likes} likes`,sx:{mr:1}}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`${performer.jokes} jokes`})]})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",children:performer.score})]},index))})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Flag,{sx:{mr:1,verticalAlign:'middle'}}),\"Conversation Goals Progress\"]}),/*#__PURE__*/_jsx(Box,{sx:{overflow:'auto',maxHeight:300},children:(_analyticsData$goalsP=analyticsData.goalsProgress)===null||_analyticsData$goalsP===void 0?void 0:_analyticsData$goalsP.map((goal,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",fontWeight:\"bold\",children:goal.name}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"primary\",children:[Math.round(goal.progress),\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:goal.progress,sx:{height:8,borderRadius:4}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:goal.goal})]},index))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,height:400},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(MessageOutlined,{sx:{mr:1,verticalAlign:'middle'}}),\"Message Breakdown (Hers vs Mine)\"]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(BarChart,{data:analyticsData.messageBreakdown,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(RechartsTooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"herMessages\",fill:\"#82ca9d\",name:\"Her Messages\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"myMessages\",fill:\"#8884d8\",name:\"My Messages\"})]})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Insights,{sx:{mr:1,verticalAlign:'middle'}}),\"AI Insights & Recommendations\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{bgcolor:'info.light',color:'white'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(LocalFireDepartment,{sx:{mr:1,verticalAlign:'middle'}}),\"Hot Streak\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Your most active conversation is with \",((_analyticsData$topPer2=analyticsData.topPerformers)===null||_analyticsData$topPer2===void 0?void 0:(_analyticsData$topPer3=_analyticsData$topPer2[0])===null||_analyticsData$topPer3===void 0?void 0:_analyticsData$topPer3.name)||'Unknown',\". Keep the momentum going!\"]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{bgcolor:'success.light',color:'white'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(TrendingUp,{sx:{mr:1,verticalAlign:'middle'}}),\"Growth Opportunity\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Average \",analyticsData.averageMessagesPerProfile||0,\" messages per conversation. Try to engage more with profiles below this average.\"]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{sx:{bgcolor:'warning.light',color:'white'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(PsychologyAlt,{sx:{mr:1,verticalAlign:'middle'}}),\"AI Suggestion\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"You've discovered \",analyticsData.totalLikes||0,\" likes across all profiles. Use this data to create more personalized conversations!\"]})]})})})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Person,{sx:{mr:1,verticalAlign:'middle'}}),\"Individual Girl Analytics\"]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:profiles.map((profile,index)=>{const messages=profile.previous_messages||[];const herMessages=messages.filter(m=>m.from!=='Me');const myMessages=messages.filter(m=>m.from==='Me');// Calculate response times in seconds\nlet herResponseTime=0;let myResponseTime=0;let herResponseCount=0;let myResponseCount=0;for(let i=1;i<messages.length;i++){const currentMsg=messages[i];const prevMsg=messages[i-1];if(currentMsg.from!==prevMsg.from){const currentTime=new Date(currentMsg.timestamp);const prevTime=new Date(prevMsg.timestamp);const diffSeconds=(currentTime-prevTime)/1000;if(diffSeconds>0&&diffSeconds<604800){// Less than 7 days\nif(currentMsg.from==='Me'){myResponseTime+=diffSeconds;myResponseCount++;}else{herResponseTime+=diffSeconds;herResponseCount++;}}}}const avgHerResponse=herResponseCount>0?Math.round(herResponseTime/herResponseCount):0;const avgMyResponse=myResponseCount>0?Math.round(myResponseTime/myResponseCount):0;// Get top words and emojis for this girl\nconst herWords={};const herEmojis={};const myWords={};const myEmojis={};const herCompliments={};const myCompliments={};messages.forEach(msg=>{if(msg.text){const words=msg.text.toLowerCase().match(/\\b\\w+\\b/g)||[];const emojis=msg.text.match(/[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}]/gu)||[];const complimentWords=/beautiful|gorgeous|stunning|amazing|wonderful|fantastic|incredible|perfect|lovely|cute|hot|sexy|attractive|charming|elegant|graceful|radiant|mesmerizing|breathtaking|divine/gi;const compliments=msg.text.match(complimentWords)||[];if(msg.from==='Me'){words.forEach(word=>{if(word.length>2)myWords[word]=(myWords[word]||0)+1;});emojis.forEach(emoji=>{myEmojis[emoji]=(myEmojis[emoji]||0)+1;});compliments.forEach(compliment=>{myCompliments[compliment.toLowerCase()]=(myCompliments[compliment.toLowerCase()]||0)+1;});}else{words.forEach(word=>{if(word.length>2)herWords[word]=(herWords[word]||0)+1;});emojis.forEach(emoji=>{herEmojis[emoji]=(herEmojis[emoji]||0)+1;});compliments.forEach(compliment=>{herCompliments[compliment.toLowerCase()]=(herCompliments[compliment.toLowerCase()]||0)+1;});}}});const topHerWords=Object.entries(herWords).sort((_ref1,_ref10)=>{let[,a]=_ref1;let[,b]=_ref10;return b-a;}).slice(0,5);const topMyWords=Object.entries(myWords).sort((_ref11,_ref12)=>{let[,a]=_ref11;let[,b]=_ref12;return b-a;}).slice(0,5);const topHerEmojis=Object.entries(herEmojis).sort((_ref13,_ref14)=>{let[,a]=_ref13;let[,b]=_ref14;return b-a;}).slice(0,5);const topMyEmojis=Object.entries(myEmojis).sort((_ref15,_ref16)=>{let[,a]=_ref15;let[,b]=_ref16;return b-a;}).slice(0,5);const topHerCompliments=Object.entries(herCompliments).sort((_ref17,_ref18)=>{let[,a]=_ref17;let[,b]=_ref18;return b-a;}).slice(0,3);const topMyCompliments=Object.entries(myCompliments).sort((_ref19,_ref20)=>{let[,a]=_ref19;let[,b]=_ref20;return b-a;}).slice(0,3);// Flag detection for this girl\nconst allText=messages.map(m=>m.text||'').join(' ').toLowerCase();const greenFlagExamples=[];const redFlagExamples=[];const greenFlagPatterns={respectful:/respect|respectful|polite|kind|gentle|considerate/gi,interested:/ask|question|curious|interested|tell me|share/gi,supportive:/support|encourage|proud|happy for|excited for/gi,communicative:/communicate|talk|discuss|share|open/gi,consistent:/consistent|reliable|dependable|always/gi,positive:/positive|optimistic|happy|joy|excited/gi};const redFlagPatterns={controlling:/control|dominate|must|should|have to|demand/gi,disrespectful:/disrespect|rude|mean|hate|dislike/gi,inconsistent:/inconsistent|unreliable|flake|cancel|no show/gi,negative:/negative|pessimistic|angry|upset|frustrated/gi,possessive:/possessive|jealous|mine|only|exclusive/gi,aggressive:/aggressive|angry|yell|shout|fight/gi};Object.entries(greenFlagPatterns).forEach(_ref21=>{let[flag,pattern]=_ref21;const matches=allText.match(pattern);if(matches&&matches.length>0){greenFlagExamples.push(`${flag} (${matches.length}x)`);}});Object.entries(redFlagPatterns).forEach(_ref22=>{let[flag,pattern]=_ref22;const matches=allText.match(pattern);if(matches&&matches.length>0){redFlagExamples.push(`${flag} (${matches.length}x)`);}});return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:4,children:/*#__PURE__*/_jsx(Card,{sx:{height:'100%',display:'flex',flexDirection:'column'},children:/*#__PURE__*/_jsxs(CardContent,{sx:{flex:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,color:\"primary\",children:profile.name||profile.username||'Unknown'}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Message Counts:\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1,mb:1},children:[/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Her: ${herMessages.length}`,color:\"success\"}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Me: ${myMessages.length}`,color:\"primary\"}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Total: ${messages.length}`,variant:\"outlined\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Avg Response Time:\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1,mb:1},children:[/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Her: ${avgHerResponse}s`,color:avgHerResponse<3600?\"success\":avgHerResponse<86400?\"warning\":\"error\"}),/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`Me: ${avgMyResponse}s`,color:avgMyResponse<3600?\"success\":avgMyResponse<86400?\"warning\":\"error\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Top Words:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",color:\"text.secondary\",children:[\"Her: \",topHerWords.map(_ref23=>{let[word,count]=_ref23;return`${word}(${count})`;}).join(', ')]}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",color:\"text.secondary\",children:[\"Me: \",topMyWords.map(_ref24=>{let[word,count]=_ref24;return`${word}(${count})`;}).join(', ')]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Top Emojis:\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5,mb:1},children:topHerEmojis.map((_ref25,idx)=>{let[emoji,count]=_ref25;return/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`${emoji}${count}`,variant:\"outlined\"},idx);})}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:topMyEmojis.map((_ref26,idx)=>{let[emoji,count]=_ref26;return/*#__PURE__*/_jsx(Chip,{size:\"small\",label:`${emoji}${count}`,variant:\"outlined\"},idx);})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Compliments:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",color:\"text.secondary\",children:[\"Her: \",topHerCompliments.map(_ref27=>{let[comp,count]=_ref27;return`${comp}(${count})`;}).join(', ')||'None']}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",color:\"text.secondary\",children:[\"Me: \",topMyCompliments.map(_ref28=>{let[comp,count]=_ref28;return`${comp}(${count})`;}).join(', ')||'None']})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Flags:\"}),greenFlagExamples.length>0&&/*#__PURE__*/_jsx(Box,{sx:{mb:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"success.main\",fontWeight:\"bold\",children:[\"\\uD83D\\uDFE2 Green: \",greenFlagExamples.slice(0,3).join(', ')]})}),redFlagExamples.length>0&&/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"error.main\",fontWeight:\"bold\",children:[\"\\uD83D\\uDD34 Red: \",redFlagExamples.slice(0,3).join(', ')]})}),greenFlagExamples.length===0&&redFlagExamples.length===0&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"No significant flags detected\"})]})]})})},index);})})]})})]})]});};export default Analytics;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Container","Grid","Card","CardContent","Chip","Divider","List","ListItem","ListItemText","ListItemIcon","Avatar","LinearProgress","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","RechartsTooltip","ResponsiveContainer","PieChart","Pie","Cell","AreaChart","Area","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","TrendingUp","TrendingDown","Favorite","Message","Person","EmojiEmotions","Psychology","Speed","Star","LocalFireDepartment","TrendingFlat","PsychologyAlt","MessageOutlined","Timeline","Insights","Analytics","AnalyticsIcon","SentimentSatisfied","SentimentDissatisfied","SentimentNeutral","Flag","axios","jsx","_jsx","jsxs","_jsxs","_analyticsData$sentim","_analyticsData$sentim2","_analyticsData$sentim3","_analyticsData$engage","_analyticsData$topPer","_analyticsData$goalsP","_analyticsData$topPer2","_analyticsData$topPer3","profiles","setProfiles","analytics","setAnalytics","loading","setLoading","fetchData","profilesRes","analyticsRes","Promise","all","get","profilesArray","Object","entries","data","map","_ref","id","profile","error","console","calculateAnalytics","length","totalMessages","reduce","sum","p","_p$previous_messages","previous_messages","totalLikes","_p$likes","likes","totalPersonalityTags","_p$personality_tags","personality_tags","totalInsideJokes","_p$inside_jokes","inside_jokes","messageBreakdown","messages","herMessages","filter","m","from","myMessages","name","username","total","responseTimeData","totalResponseTime","responseCount","i","currentMsg","prevMsg","currentTime","Date","timestamp","prevTime","diffHours","avgResponseTime","Math","round","allWords","allEmojis","allCompliments","forEach","profileName","msg","text","words","toLowerCase","match","word","emojis","emoji","complimentWords","compliments","compliment","topWords","sort","_ref2","_ref3","a","b","slice","_ref4","count","topEmojis","_ref5","_ref6","_ref7","topCompliments","_ref8","_ref9","_ref0","flagsData","allText","join","greenFlags","respectful","interested","supportive","communicative","consistent","positive","redFlags","controlling","disrespectful","inconsistent","negative","possessive","aggressive","greenFlagCount","values","pattern","redFlagCount","flagRatio","messageActivity","_profile$previous_mes","_profile$likes","_profile$personality_","_profile$inside_jokes","personality","jokes","sentimentData","positiveWords","negativeWords","positiveCount","negativeCount","neutral","max","engagementData","_profile$inside_jokes2","_profile$inside_jokes3","emojiCount","_msg$text","engagement","min","topPerformers","_profile$previous_mes2","_profile$likes2","_profile$personality_2","_profile$inside_jokes4","_profile$previous_mes3","_profile$likes3","_profile$personality_3","_profile$inside_jokes5","score","goalsProgress","_p$conversation_goals","conversation_goals","goal","progress","random","timeActivity","day","floor","replies","averageMessagesPerProfile","averageLikesPerProfile","averagePersonalityPerProfile","analyticsData","COLORS","children","maxWidth","sx","py","fontFamily","fontSize","lineHeight","display","alignItems","mb","mr","color","variant","component","gridTemplateColumns","xs","sm","md","gap","className","borderRadius","minHeight","flexDirection","justifyContent","boxShadow","background","backdropFilter","transition","transform","fontWeight","opacity","letterSpacing","container","spacing","item","lg","height","gutterBottom","verticalAlign","width","dataKey","fill","value","d","cx","cy","outerRadius","index","stroke","fillOpacity","type","stackId","flex","overflowY","performer","bgcolor","primary","secondary","size","label","overflow","maxHeight","herResponseTime","myResponseTime","herResponseCount","myResponseCount","diffSeconds","avgHerResponse","avgMyResponse","herWords","herEmojis","myWords","myEmojis","herCompliments","myCompliments","topHerWords","_ref1","_ref10","topMyWords","_ref11","_ref12","topHerEmojis","_ref13","_ref14","topMyEmojis","_ref15","_ref16","topHerCompliments","_ref17","_ref18","topMyCompliments","_ref19","_ref20","greenFlagExamples","redFlagExamples","greenFlagPatterns","redFlagPatterns","_ref21","flag","matches","push","_ref22","_ref23","_ref24","flexWrap","_ref25","idx","_ref26","_ref27","comp","_ref28"],"sources":["/workspace/frontend/src/pages/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  Chip,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Avatar,\n  LinearProgress\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip as RechartsTooltip,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar\n} from 'recharts';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Favorite,\n  Message,\n  Person,\n  EmojiEmotions,\n  Psychology,\n  Speed,\n  Star,\n  LocalFireDepartment,\n  TrendingFlat,\n  PsychologyAlt,\n  MessageOutlined,\n  Timeline,\n  Insights,\n  Analytics as AnalyticsIcon,\n  SentimentSatisfied,\n  SentimentDissatisfied,\n  SentimentNeutral,\n  Flag\n} from '@mui/icons-material';\nimport axios from 'axios';\n\nconst Analytics = () => {\n  const [profiles, setProfiles] = useState([]);\n  const [analytics, setAnalytics] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const [profilesRes, analyticsRes] = await Promise.all([\n        axios.get('https://3e79a6ace678.ngrok-free.app/api/profiles'),\n        axios.get('https://3e79a6ace678.ngrok-free.app/api/analytics')\n      ]);\n      \n      // Convert profiles object to array\n      const profilesArray = Object.entries(profilesRes.data).map(([id, profile]) => ({\n        id,\n        ...profile\n      }));\n      \n      setProfiles(profilesArray);\n      setAnalytics(analyticsRes.data);\n    } catch (error) {\n      console.error('Error fetching analytics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate advanced analytics\n  const calculateAnalytics = () => {\n    if (!profiles.length) return {};\n\n    const totalMessages = profiles.reduce((sum, p) => sum + (p.previous_messages?.length || 0), 0);\n    const totalLikes = profiles.reduce((sum, p) => sum + (p.likes?.length || 0), 0);\n    const totalPersonalityTags = profiles.reduce((sum, p) => sum + (p.personality_tags?.length || 0), 0);\n    const totalInsideJokes = profiles.reduce((sum, p) => sum + (p.inside_jokes?.length || 0), 0);\n\n    // Message breakdown (hers vs mine)\n    const messageBreakdown = profiles.map(profile => {\n      const messages = profile.previous_messages || [];\n      const herMessages = messages.filter(m => m.from !== 'Me').length;\n      const myMessages = messages.filter(m => m.from === 'Me').length;\n      \n      return {\n        name: profile.name || profile.username || 'Unknown',\n        herMessages,\n        myMessages,\n        total: messages.length\n      };\n    });\n\n    // Response time analysis\n    const responseTimeData = profiles.map(profile => {\n      const messages = profile.previous_messages || [];\n      let totalResponseTime = 0;\n      let responseCount = 0;\n      \n      for (let i = 1; i < messages.length; i++) {\n        const currentMsg = messages[i];\n        const prevMsg = messages[i - 1];\n        \n        if (currentMsg.from !== prevMsg.from) { // Different sender\n          const currentTime = new Date(currentMsg.timestamp);\n          const prevTime = new Date(prevMsg.timestamp);\n          const diffHours = (currentTime - prevTime) / (1000 * 60 * 60);\n          \n          if (diffHours > 0 && diffHours < 168) { // Between 0 and 7 days\n            totalResponseTime += diffHours;\n            responseCount++;\n          }\n        }\n      }\n      \n      const avgResponseTime = responseCount > 0 ? totalResponseTime / responseCount : 0;\n      \n      return {\n        name: profile.name || profile.username || 'Unknown',\n        avgResponseTime: Math.round(avgResponseTime * 10) / 10,\n        responseCount\n      };\n    });\n\n    // Top words and emojis analysis\n    const allWords = {};\n    const allEmojis = {};\n    const allCompliments = {};\n    \n    profiles.forEach(profile => {\n      const messages = profile.previous_messages || [];\n      const profileName = profile.name || profile.username || 'Unknown';\n      \n      messages.forEach(msg => {\n        if (msg.text) {\n          // Count words\n          const words = msg.text.toLowerCase().match(/\\b\\w+\\b/g) || [];\n          words.forEach(word => {\n            if (word.length > 2) { // Skip short words\n              allWords[word] = (allWords[word] || 0) + 1;\n            }\n          });\n          \n          // Count emojis\n          const emojis = msg.text.match(/[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}]/gu) || [];\n          emojis.forEach(emoji => {\n            allEmojis[emoji] = (allEmojis[emoji] || 0) + 1;\n          });\n          \n          // Count compliments\n          const complimentWords = /beautiful|gorgeous|stunning|amazing|wonderful|fantastic|incredible|perfect|lovely|cute|hot|sexy|attractive|charming|elegant|graceful|radiant|mesmerizing|breathtaking|divine/gi;\n          const compliments = msg.text.match(complimentWords) || [];\n          compliments.forEach(compliment => {\n            allCompliments[compliment.toLowerCase()] = (allCompliments[compliment.toLowerCase()] || 0) + 1;\n          });\n        }\n      });\n    });\n\n    // Get top words, emojis, and compliments\n    const topWords = Object.entries(allWords)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10)\n      .map(([word, count]) => ({ word, count }));\n\n    const topEmojis = Object.entries(allEmojis)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10)\n      .map(([emoji, count]) => ({ emoji, count }));\n\n    const topCompliments = Object.entries(allCompliments)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10)\n      .map(([compliment, count]) => ({ compliment, count }));\n\n    // Green and red flags detection\n    const flagsData = profiles.map(profile => {\n      const messages = profile.previous_messages || [];\n      const allText = messages.map(m => m.text || '').join(' ').toLowerCase();\n      \n      // Green flags\n      const greenFlags = {\n        respectful: /respect|respectful|polite|kind|gentle|considerate/gi,\n        interested: /ask|question|curious|interested|tell me|share/gi,\n        supportive: /support|encourage|proud|happy for|excited for/gi,\n        communicative: /communicate|talk|discuss|share|open/gi,\n        consistent: /consistent|reliable|dependable|always/gi,\n        positive: /positive|optimistic|happy|joy|excited/gi\n      };\n      \n      // Red flags\n      const redFlags = {\n        controlling: /control|dominate|must|should|have to|demand/gi,\n        disrespectful: /disrespect|rude|mean|hate|dislike/gi,\n        inconsistent: /inconsistent|unreliable|flake|cancel|no show/gi,\n        negative: /negative|pessimistic|angry|upset|frustrated/gi,\n        possessive: /possessive|jealous|mine|only|exclusive/gi,\n        aggressive: /aggressive|angry|yell|shout|fight/gi\n      };\n      \n      const greenFlagCount = Object.values(greenFlags).reduce((sum, pattern) => \n        sum + (allText.match(pattern) || []).length, 0\n      );\n      \n      const redFlagCount = Object.values(redFlags).reduce((sum, pattern) => \n        sum + (allText.match(pattern) || []).length, 0\n      );\n      \n      return {\n        name: profile.name || profile.username || 'Unknown',\n        greenFlags: greenFlagCount,\n        redFlags: redFlagCount,\n        flagRatio: greenFlagCount > 0 ? (greenFlagCount / (greenFlagCount + redFlagCount)) * 100 : 0\n      };\n    });\n\n    // Message activity over time\n    const messageActivity = profiles.map(profile => ({\n      name: profile.name || profile.username || 'Unknown',\n      messages: profile.previous_messages?.length || 0,\n      likes: profile.likes?.length || 0,\n      personality: profile.personality_tags?.length || 0,\n      jokes: profile.inside_jokes?.length || 0\n    }));\n\n    // Sentiment analysis\n    const sentimentData = profiles.map(profile => {\n      const messages = profile.previous_messages || [];\n      const positiveWords = /love|great|happy|fun|😍|😄|😊|😘|flirt|kiss|cute|hot|babe|sweet|yes|sure|haha|lol|amazing|awesome|excited|enjoy|like|good|nice|thanks|thank you|see you|call|date|meet|voice|video/gi;\n      const negativeWords = /angry|mad|annoy|hate|😠|😡|wtf|ugh|no|bad|terrible|awful|disappointed|sad|cry|miss|lonely|😢|😭/gi;\n      \n      let positiveCount = 0;\n      let negativeCount = 0;\n      \n      messages.forEach(msg => {\n        if (msg.text) {\n          positiveCount += (msg.text.match(positiveWords) || []).length;\n          negativeCount += (msg.text.match(negativeWords) || []).length;\n        }\n      });\n\n      return {\n        name: profile.name || profile.username || 'Unknown',\n        positive: positiveCount,\n        negative: negativeCount,\n        neutral: Math.max(0, messages.length - positiveCount - negativeCount)\n      };\n    });\n\n    // Engagement metrics\n    const engagementData = profiles.map(profile => {\n      const messages = profile.previous_messages || [];\n      const emojiCount = messages.reduce((sum, msg) => \n        sum + (msg.text?.match(/[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}]/gu) || []).length, 0\n      );\n      \n      return {\n        name: profile.name || profile.username || 'Unknown',\n        messages: messages.length,\n        emojis: emojiCount,\n        jokes: profile.inside_jokes?.length || 0,\n        engagement: Math.min(100, (messages.length * 2) + (emojiCount * 3) + ((profile.inside_jokes?.length || 0) * 5))\n      };\n    });\n\n    // Top performers\n    const topPerformers = profiles\n      .map(profile => ({\n        name: profile.name || profile.username || 'Unknown',\n        messages: profile.previous_messages?.length || 0,\n        likes: profile.likes?.length || 0,\n        personality: profile.personality_tags?.length || 0,\n        jokes: profile.inside_jokes?.length || 0,\n        score: (profile.previous_messages?.length || 0) + (profile.likes?.length || 0) * 2 + (profile.personality_tags?.length || 0) * 3 + (profile.inside_jokes?.length || 0) * 5\n      }))\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n\n    // Conversation goals progress\n    const goalsProgress = profiles\n      .filter(p => p.conversation_goals?.length > 0)\n      .map(profile => ({\n        name: profile.name || profile.username || 'Unknown',\n        goal: profile.conversation_goals[0],\n        progress: Math.min(100, Math.random() * 100) // Placeholder - could be calculated based on goal keywords\n      }));\n\n    // Time-based activity (last 7 days simulation)\n    const timeActivity = [\n      { day: 'Mon', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 },\n      { day: 'Tue', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 },\n      { day: 'Wed', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 },\n      { day: 'Thu', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 },\n      { day: 'Fri', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 },\n      { day: 'Sat', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 },\n      { day: 'Sun', messages: Math.floor(Math.random() * 20) + 5, replies: Math.floor(Math.random() * 15) + 3 }\n    ];\n\n    return {\n      totalMessages,\n      totalLikes,\n      totalPersonalityTags,\n      totalInsideJokes,\n      messageBreakdown,\n      responseTimeData,\n      topWords,\n      topEmojis,\n      topCompliments,\n      flagsData,\n      messageActivity,\n      sentimentData,\n      engagementData,\n      topPerformers,\n      goalsProgress,\n      timeActivity,\n      averageMessagesPerProfile: Math.round(totalMessages / profiles.length),\n      averageLikesPerProfile: Math.round(totalLikes / profiles.length),\n      averagePersonalityPerProfile: Math.round(totalPersonalityTags / profiles.length)\n    };\n  };\n\n  const analyticsData = calculateAnalytics();\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n\n\n\n  if (loading) {\n    return (\n      <Container>\n        <LinearProgress />\n        <Typography>Loading analytics...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 4, fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif', fontSize: 16, lineHeight: 1.4 }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\n        <AnalyticsIcon sx={{ mr: 2, fontSize: 40, color: 'primary.main' }} />\n        <Typography variant=\"h3\" component=\"h1\">\n          Dating Analytics Dashboard\n        </Typography>\n      </Box>\n\n      {/* Key Metrics */}\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: '1fr 1fr 1fr 1fr' }, gap: { xs: 3, md: 4 }, mb: 5 }}>\n        {/* MetricCard: Total Messages */}\n        <Paper className=\"metric-card\" sx={{\n          p: 3,\n          borderRadius: 3,\n          minHeight: 140,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          background: 'rgba(255,255,255,0.95)',\n          backdropFilter: 'blur(10px)',\n          transition: 'all 0.2s cubic-bezier(0.4,0,0.2,1)',\n          '&:hover': { boxShadow: '0 8px 24px rgba(0,0,0,0.15)', transform: 'translateY(-2px)' },\n        }}>\n          <Message sx={{ fontSize: 32, color: '#3b82f6', mb: 1 }} />\n          <Typography sx={{ fontSize: 40, fontWeight: 300, color: '#1a1a1a', mb: 0.5 }}>{analyticsData.totalMessages || 0}</Typography>\n          <Typography sx={{ fontSize: 14, fontWeight: 500, color: '#6b7280', opacity: 0.6, letterSpacing: 0.5 }}>Total Messages</Typography>\n        </Paper>\n        {/* MetricCard: Active Conversations */}\n        <Paper className=\"metric-card\" sx={{\n          p: 3,\n          borderRadius: 3,\n          minHeight: 140,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          background: 'rgba(255,255,255,0.95)',\n          backdropFilter: 'blur(10px)',\n          transition: 'all 0.2s cubic-bezier(0.4,0,0.2,1)',\n          '&:hover': { boxShadow: '0 8px 24px rgba(0,0,0,0.15)', transform: 'translateY(-2px)' },\n        }}>\n          <Person sx={{ fontSize: 32, color: '#10b981', mb: 1 }} />\n          <Typography sx={{ fontSize: 40, fontWeight: 300, color: '#1a1a1a', mb: 0.5 }}>{profiles.length}</Typography>\n          <Typography sx={{ fontSize: 14, fontWeight: 500, color: '#6b7280', opacity: 0.6, letterSpacing: 0.5 }}>Active Conversations</Typography>\n        </Paper>\n        {/* MetricCard: Total Likes */}\n        <Paper className=\"metric-card\" sx={{\n          p: 3,\n          borderRadius: 3,\n          minHeight: 140,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          background: 'rgba(255,255,255,0.95)',\n          backdropFilter: 'blur(10px)',\n          transition: 'all 0.2s cubic-bezier(0.4,0,0.2,1)',\n          '&:hover': { boxShadow: '0 8px 24px rgba(0,0,0,0.15)', transform: 'translateY(-2px)' },\n        }}>\n          <Favorite sx={{ fontSize: 32, color: '#ef4444', mb: 1 }} />\n          <Typography sx={{ fontSize: 40, fontWeight: 300, color: '#1a1a1a', mb: 0.5 }}>{analyticsData.totalLikes || 0}</Typography>\n          <Typography sx={{ fontSize: 14, fontWeight: 500, color: '#6b7280', opacity: 0.6, letterSpacing: 0.5 }}>Total Likes Discovered</Typography>\n        </Paper>\n        {/* MetricCard: Inside Jokes */}\n        <Paper className=\"metric-card\" sx={{\n          p: 3,\n          borderRadius: 3,\n          minHeight: 140,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          background: 'rgba(255,255,255,0.95)',\n          backdropFilter: 'blur(10px)',\n          transition: 'all 0.2s cubic-bezier(0.4,0,0.2,1)',\n          '&:hover': { boxShadow: '0 8px 24px rgba(0,0,0,0.15)', transform: 'translateY(-2px)' },\n        }}>\n          <EmojiEmotions sx={{ fontSize: 32, color: '#f59e0b', mb: 1 }} />\n          <Typography sx={{ fontSize: 40, fontWeight: 300, color: '#1a1a1a', mb: 0.5 }}>{analyticsData.totalInsideJokes || 0}</Typography>\n          <Typography sx={{ fontSize: 14, fontWeight: 500, color: '#6b7280', opacity: 0.6, letterSpacing: 0.5 }}>Inside Jokes</Typography>\n        </Paper>\n      </Box>\n\n      <Grid container spacing={3}>\n        {/* Message Activity Chart */}\n        <Grid item xs={12} lg={8}>\n          <Paper sx={{ p: 3, height: 400 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <MessageOutlined sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Message Activity by Profile\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={analyticsData.messageActivity}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Bar dataKey=\"messages\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Sentiment Analysis */}\n        <Grid item xs={12} lg={4}>\n          <Paper sx={{ p: 3, height: 400 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Psychology sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Sentiment Overview\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={[\n                    { name: 'Positive', value: analyticsData.sentimentData?.reduce((sum, d) => sum + d.positive, 0) || 0 },\n                    { name: 'Neutral', value: analyticsData.sentimentData?.reduce((sum, d) => sum + d.neutral, 0) || 0 },\n                    { name: 'Negative', value: analyticsData.sentimentData?.reduce((sum, d) => sum + d.negative, 0) || 0 }\n                  ]}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {COLORS.map((color, index) => (\n                    <Cell key={`cell-${index}`} fill={color} />\n                  ))}\n                </Pie>\n                <RechartsTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Engagement Radar Chart */}\n        <Grid item xs={12} lg={6}>\n          <Paper sx={{ p: 3, height: 400 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Speed sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Engagement Analysis\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <RadarChart data={analyticsData.engagementData?.slice(0, 5)}>\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"name\" />\n                <PolarRadiusAxis />\n                <Radar name=\"Engagement\" dataKey=\"engagement\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n                <RechartsTooltip />\n              </RadarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Time Activity */}\n        <Grid item xs={12} lg={6}>\n          <Paper sx={{ p: 3, height: 400 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Timeline sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Weekly Activity Trend\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart data={analyticsData.timeActivity}>\n                <XAxis dataKey=\"day\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Area type=\"monotone\" dataKey=\"messages\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                <Area type=\"monotone\" dataKey=\"replies\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n              </AreaChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Top Performers */}\n        <Grid item xs={12} lg={6}>\n          <Paper sx={{ p: 3, height: 400, display: 'flex', flexDirection: 'column' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Star sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Top Performers\n            </Typography>\n            <Box sx={{ flex: 1, overflowY: 'auto' }}>\n              <List>\n                {analyticsData.topPerformers?.map((performer, index) => (\n                  <ListItem key={index} sx={{ m: 0, p: 0 }}>\n                    <ListItemIcon>\n                      <Avatar sx={{ bgcolor: index < 3 ? 'gold' : 'grey.400' }}>\n                        {index + 1}\n                      </Avatar>\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={performer.name}\n                      secondary={\n                        <Box>\n                          <Chip size=\"small\" label={`${performer.messages} messages`} sx={{ mr: 1 }} />\n                          <Chip size=\"small\" label={`${performer.likes} likes`} sx={{ mr: 1 }} />\n                          <Chip size=\"small\" label={`${performer.jokes} jokes`} />\n                        </Box>\n                      }\n                    />\n                    <Typography variant=\"h6\" color=\"primary\">\n                      {performer.score}\n                    </Typography>\n                  </ListItem>\n                ))}\n              </List>\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Goals Progress */}\n        <Grid item xs={12} lg={6}>\n          <Paper sx={{ p: 3, height: 400 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Flag sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Conversation Goals Progress\n            </Typography>\n            <Box sx={{ overflow: 'auto', maxHeight: 300 }}>\n              {analyticsData.goalsProgress?.map((goal, index) => (\n                <Box key={index} sx={{ mb: 2 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body2\" fontWeight=\"bold\">\n                      {goal.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"primary\">\n                      {Math.round(goal.progress)}%\n                    </Typography>\n                  </Box>\n                  <LinearProgress \n                    variant=\"determinate\" \n                    value={goal.progress} \n                    sx={{ height: 8, borderRadius: 4 }}\n                  />\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {goal.goal}\n                  </Typography>\n                </Box>\n              ))}\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Message Breakdown */}\n        <Grid item xs={12} lg={6}>\n          <Paper sx={{ p: 3, height: 400 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <MessageOutlined sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Message Breakdown (Hers vs Mine)\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={analyticsData.messageBreakdown}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <RechartsTooltip />\n                <Bar dataKey=\"herMessages\" fill=\"#82ca9d\" name=\"Her Messages\" />\n                <Bar dataKey=\"myMessages\" fill=\"#8884d8\" name=\"My Messages\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n\n\n        {/* Insights */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Insights sx={{ mr: 1, verticalAlign: 'middle' }} />\n              AI Insights & Recommendations\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={4}>\n                <Card sx={{ bgcolor: 'info.light', color: 'white' }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      <LocalFireDepartment sx={{ mr: 1, verticalAlign: 'middle' }} />\n                      Hot Streak\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      Your most active conversation is with {analyticsData.topPerformers?.[0]?.name || 'Unknown'}. \n                      Keep the momentum going!\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Card sx={{ bgcolor: 'success.light', color: 'white' }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      <TrendingUp sx={{ mr: 1, verticalAlign: 'middle' }} />\n                      Growth Opportunity\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      Average {analyticsData.averageMessagesPerProfile || 0} messages per conversation. \n                      Try to engage more with profiles below this average.\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Card sx={{ bgcolor: 'warning.light', color: 'white' }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      <PsychologyAlt sx={{ mr: 1, verticalAlign: 'middle' }} />\n                      AI Suggestion\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      You've discovered {analyticsData.totalLikes || 0} likes across all profiles. \n                      Use this data to create more personalized conversations!\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Individual Girl Analytics */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              <Person sx={{ mr: 1, verticalAlign: 'middle' }} />\n              Individual Girl Analytics\n            </Typography>\n            <Grid container spacing={3}>\n              {profiles.map((profile, index) => {\n                const messages = profile.previous_messages || [];\n                const herMessages = messages.filter(m => m.from !== 'Me');\n                const myMessages = messages.filter(m => m.from === 'Me');\n                \n                // Calculate response times in seconds\n                let herResponseTime = 0;\n                let myResponseTime = 0;\n                let herResponseCount = 0;\n                let myResponseCount = 0;\n                \n                for (let i = 1; i < messages.length; i++) {\n                  const currentMsg = messages[i];\n                  const prevMsg = messages[i - 1];\n                  \n                  if (currentMsg.from !== prevMsg.from) {\n                    const currentTime = new Date(currentMsg.timestamp);\n                    const prevTime = new Date(prevMsg.timestamp);\n                    const diffSeconds = (currentTime - prevTime) / 1000;\n                    \n                    if (diffSeconds > 0 && diffSeconds < 604800) { // Less than 7 days\n                      if (currentMsg.from === 'Me') {\n                        myResponseTime += diffSeconds;\n                        myResponseCount++;\n                      } else {\n                        herResponseTime += diffSeconds;\n                        herResponseCount++;\n                      }\n                    }\n                  }\n                }\n                \n                const avgHerResponse = herResponseCount > 0 ? Math.round(herResponseTime / herResponseCount) : 0;\n                const avgMyResponse = myResponseCount > 0 ? Math.round(myResponseTime / myResponseCount) : 0;\n                \n                // Get top words and emojis for this girl\n                const herWords = {};\n                const herEmojis = {};\n                const myWords = {};\n                const myEmojis = {};\n                const herCompliments = {};\n                const myCompliments = {};\n                \n                messages.forEach(msg => {\n                  if (msg.text) {\n                    const words = msg.text.toLowerCase().match(/\\b\\w+\\b/g) || [];\n                    const emojis = msg.text.match(/[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}]/gu) || [];\n                    const complimentWords = /beautiful|gorgeous|stunning|amazing|wonderful|fantastic|incredible|perfect|lovely|cute|hot|sexy|attractive|charming|elegant|graceful|radiant|mesmerizing|breathtaking|divine/gi;\n                    const compliments = msg.text.match(complimentWords) || [];\n                    \n                    if (msg.from === 'Me') {\n                      words.forEach(word => {\n                        if (word.length > 2) myWords[word] = (myWords[word] || 0) + 1;\n                      });\n                      emojis.forEach(emoji => {\n                        myEmojis[emoji] = (myEmojis[emoji] || 0) + 1;\n                      });\n                      compliments.forEach(compliment => {\n                        myCompliments[compliment.toLowerCase()] = (myCompliments[compliment.toLowerCase()] || 0) + 1;\n                      });\n                    } else {\n                      words.forEach(word => {\n                        if (word.length > 2) herWords[word] = (herWords[word] || 0) + 1;\n                      });\n                      emojis.forEach(emoji => {\n                        herEmojis[emoji] = (herEmojis[emoji] || 0) + 1;\n                      });\n                      compliments.forEach(compliment => {\n                        herCompliments[compliment.toLowerCase()] = (herCompliments[compliment.toLowerCase()] || 0) + 1;\n                      });\n                    }\n                  }\n                });\n                \n                const topHerWords = Object.entries(herWords).sort(([,a], [,b]) => b - a).slice(0, 5);\n                const topMyWords = Object.entries(myWords).sort(([,a], [,b]) => b - a).slice(0, 5);\n                const topHerEmojis = Object.entries(herEmojis).sort(([,a], [,b]) => b - a).slice(0, 5);\n                const topMyEmojis = Object.entries(myEmojis).sort(([,a], [,b]) => b - a).slice(0, 5);\n                const topHerCompliments = Object.entries(herCompliments).sort(([,a], [,b]) => b - a).slice(0, 3);\n                const topMyCompliments = Object.entries(myCompliments).sort(([,a], [,b]) => b - a).slice(0, 3);\n                \n                // Flag detection for this girl\n                const allText = messages.map(m => m.text || '').join(' ').toLowerCase();\n                const greenFlagExamples = [];\n                const redFlagExamples = [];\n                \n                const greenFlagPatterns = {\n                  respectful: /respect|respectful|polite|kind|gentle|considerate/gi,\n                  interested: /ask|question|curious|interested|tell me|share/gi,\n                  supportive: /support|encourage|proud|happy for|excited for/gi,\n                  communicative: /communicate|talk|discuss|share|open/gi,\n                  consistent: /consistent|reliable|dependable|always/gi,\n                  positive: /positive|optimistic|happy|joy|excited/gi\n                };\n                \n                const redFlagPatterns = {\n                  controlling: /control|dominate|must|should|have to|demand/gi,\n                  disrespectful: /disrespect|rude|mean|hate|dislike/gi,\n                  inconsistent: /inconsistent|unreliable|flake|cancel|no show/gi,\n                  negative: /negative|pessimistic|angry|upset|frustrated/gi,\n                  possessive: /possessive|jealous|mine|only|exclusive/gi,\n                  aggressive: /aggressive|angry|yell|shout|fight/gi\n                };\n                \n                Object.entries(greenFlagPatterns).forEach(([flag, pattern]) => {\n                  const matches = allText.match(pattern);\n                  if (matches && matches.length > 0) {\n                    greenFlagExamples.push(`${flag} (${matches.length}x)`);\n                  }\n                });\n                \n                Object.entries(redFlagPatterns).forEach(([flag, pattern]) => {\n                  const matches = allText.match(pattern);\n                  if (matches && matches.length > 0) {\n                    redFlagExamples.push(`${flag} (${matches.length}x)`);\n                  }\n                });\n                \n                return (\n                  <Grid item xs={12} md={6} lg={4} key={index}>\n                    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n                      <CardContent sx={{ flex: 1 }}>\n                        <Typography variant=\"h6\" gutterBottom color=\"primary\">\n                          {profile.name || profile.username || 'Unknown'}\n                        </Typography>\n                        \n                        {/* Message Counts */}\n                        <Box sx={{ mb: 2 }}>\n                          <Typography variant=\"subtitle2\" gutterBottom>Message Counts:</Typography>\n                          <Box sx={{ display: 'flex', gap: 1, mb: 1 }}>\n                            <Chip size=\"small\" label={`Her: ${herMessages.length}`} color=\"success\" />\n                            <Chip size=\"small\" label={`Me: ${myMessages.length}`} color=\"primary\" />\n                            <Chip size=\"small\" label={`Total: ${messages.length}`} variant=\"outlined\" />\n                          </Box>\n                        </Box>\n                        \n                        {/* Response Times */}\n                        <Box sx={{ mb: 2 }}>\n                          <Typography variant=\"subtitle2\" gutterBottom>Avg Response Time:</Typography>\n                          <Box sx={{ display: 'flex', gap: 1, mb: 1 }}>\n                            <Chip \n                              size=\"small\" \n                              label={`Her: ${avgHerResponse}s`} \n                              color={avgHerResponse < 3600 ? \"success\" : avgHerResponse < 86400 ? \"warning\" : \"error\"}\n                            />\n                            <Chip \n                              size=\"small\" \n                              label={`Me: ${avgMyResponse}s`} \n                              color={avgMyResponse < 3600 ? \"success\" : avgMyResponse < 86400 ? \"warning\" : \"error\"}\n                            />\n                          </Box>\n                        </Box>\n                        \n                        {/* Top Words */}\n                        <Box sx={{ mb: 2 }}>\n                          <Typography variant=\"subtitle2\" gutterBottom>Top Words:</Typography>\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                            Her: {topHerWords.map(([word, count]) => `${word}(${count})`).join(', ')}\n                          </Typography>\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                            Me: {topMyWords.map(([word, count]) => `${word}(${count})`).join(', ')}\n                          </Typography>\n                        </Box>\n                        \n                        {/* Top Emojis */}\n                        <Box sx={{ mb: 2 }}>\n                          <Typography variant=\"subtitle2\" gutterBottom>Top Emojis:</Typography>\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, mb: 1 }}>\n                            {topHerEmojis.map(([emoji, count], idx) => (\n                              <Chip key={idx} size=\"small\" label={`${emoji}${count}`} variant=\"outlined\" />\n                            ))}\n                          </Box>\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                            {topMyEmojis.map(([emoji, count], idx) => (\n                              <Chip key={idx} size=\"small\" label={`${emoji}${count}`} variant=\"outlined\" />\n                            ))}\n                          </Box>\n                        </Box>\n                        \n                        {/* Compliments */}\n                        <Box sx={{ mb: 2 }}>\n                          <Typography variant=\"subtitle2\" gutterBottom>Compliments:</Typography>\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                            Her: {topHerCompliments.map(([comp, count]) => `${comp}(${count})`).join(', ') || 'None'}\n                          </Typography>\n                          <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                            Me: {topMyCompliments.map(([comp, count]) => `${comp}(${count})`).join(', ') || 'None'}\n                          </Typography>\n                        </Box>\n                        \n                        {/* Flags */}\n                        <Box sx={{ mb: 2 }}>\n                          <Typography variant=\"subtitle2\" gutterBottom>Flags:</Typography>\n                          {greenFlagExamples.length > 0 && (\n                            <Box sx={{ mb: 1 }}>\n                              <Typography variant=\"caption\" color=\"success.main\" fontWeight=\"bold\">\n                                🟢 Green: {greenFlagExamples.slice(0, 3).join(', ')}\n                              </Typography>\n                            </Box>\n                          )}\n                          {redFlagExamples.length > 0 && (\n                            <Box>\n                              <Typography variant=\"caption\" color=\"error.main\" fontWeight=\"bold\">\n                                🔴 Red: {redFlagExamples.slice(0, 3).join(', ')}\n                              </Typography>\n                            </Box>\n                          )}\n                          {greenFlagExamples.length === 0 && redFlagExamples.length === 0 && (\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              No significant flags detected\n                            </Typography>\n                          )}\n                        </Box>\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Analytics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}