{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);// Check for existing session on app load\nuseEffect(()=>{const checkAuthStatus=async()=>{try{const savedUser=localStorage.getItem('ai_wingman_user');if(savedUser){const userData=JSON.parse(savedUser);setUser(userData);setIsAuthenticated(true);// Set current user context in backend\ntry{await fetch('https://3e79a6ace678.ngrok-free.app/api/auth/set-user',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:userData.username})});}catch(error){console.error('Error setting user context:',error);}}}catch(error){console.error('Error loading user data:',error);localStorage.removeItem('ai_wingman_user');}finally{setLoading(false);}};checkAuthStatus();},[]);const login=async userData=>{try{setUser(userData);setIsAuthenticated(true);localStorage.setItem('ai_wingman_user',JSON.stringify(userData));// Set current user context in backend\nawait fetch('https://3e79a6ace678.ngrok-free.app/api/auth/set-user',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:userData.username})});// If this is the main user (iulian_plop), preserve existing data\nif(userData.username==='iulian_plop'){// Load existing profile data\nfetchAndMergeExistingData(userData);}}catch(error){console.error('Error saving user data:',error);}};const logout=()=>{setUser(null);setIsAuthenticated(false);localStorage.removeItem('ai_wingman_user');};const updateUserProfile=profileData=>{if(user){const updatedUser={...user,profile:{...user.profile,...profileData}};setUser(updatedUser);localStorage.setItem('ai_wingman_user',JSON.stringify(updatedUser));}};const fetchAndMergeExistingData=async userData=>{try{// Fetch existing user profile from backend\nconst response=await fetch('https://3e79a6ace678.ngrok-free.app/api/user-profile');if(response.ok){const existingProfile=await response.json();const mergedUser={...userData,profile:{...userData.profile,...existingProfile,hasCompletedProfile:true}};setUser(mergedUser);localStorage.setItem('ai_wingman_user',JSON.stringify(mergedUser));}}catch(error){console.error('Error fetching existing profile:',error);}};const value={user,isAuthenticated,loading,login,logout,updateUserProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuthStatus","savedUser","localStorage","getItem","userData","JSON","parse","fetch","method","headers","body","stringify","username","error","console","removeItem","login","setItem","fetchAndMergeExistingData","logout","updateUserProfile","profileData","updatedUser","profile","response","ok","existingProfile","json","mergedUser","hasCompletedProfile","value","Provider"],"sources":["/workspace/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for existing session on app load\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        const savedUser = localStorage.getItem('ai_wingman_user');\r\n        if (savedUser) {\r\n          const userData = JSON.parse(savedUser);\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n          \r\n          // Set current user context in backend\r\n          try {\r\n            await fetch('https://3e79a6ace678.ngrok-free.app/api/auth/set-user', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                username: userData.username\r\n              })\r\n            });\r\n          } catch (error) {\r\n            console.error('Error setting user context:', error);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading user data:', error);\r\n        localStorage.removeItem('ai_wingman_user');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const login = async (userData) => {\r\n    try {\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('ai_wingman_user', JSON.stringify(userData));\r\n      \r\n      // Set current user context in backend\r\n      await fetch('https://3e79a6ace678.ngrok-free.app/api/auth/set-user', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: userData.username\r\n        })\r\n      });\r\n      \r\n      // If this is the main user (iulian_plop), preserve existing data\r\n      if (userData.username === 'iulian_plop') {\r\n        // Load existing profile data\r\n        fetchAndMergeExistingData(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving user data:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('ai_wingman_user');\r\n  };\r\n\r\n  const updateUserProfile = (profileData) => {\r\n    if (user) {\r\n      const updatedUser = {\r\n        ...user,\r\n        profile: {\r\n          ...user.profile,\r\n          ...profileData\r\n        }\r\n      };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('ai_wingman_user', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  const fetchAndMergeExistingData = async (userData) => {\r\n    try {\r\n      // Fetch existing user profile from backend\r\n      const response = await fetch('https://3e79a6ace678.ngrok-free.app/api/user-profile');\r\n      if (response.ok) {\r\n        const existingProfile = await response.json();\r\n        const mergedUser = {\r\n          ...userData,\r\n          profile: {\r\n            ...userData.profile,\r\n            ...existingProfile,\r\n            hasCompletedProfile: true\r\n          }\r\n        };\r\n        setUser(mergedUser);\r\n        localStorage.setItem('ai_wingman_user', JSON.stringify(mergedUser));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching existing profile:', error);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    logout,\r\n    updateUserProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}