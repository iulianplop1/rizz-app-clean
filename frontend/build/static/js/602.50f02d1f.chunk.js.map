{"version":3,"file":"static/js/602.50f02d1f.chunk.js","mappings":"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","sources":["pages/PhotoAIResponse.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useRef } from 'react';\nimport { Box, Typography, Button, Paper, TextField, CircularProgress, Alert, LinearProgress, MenuItem, Select, FormControl, InputLabel, Collapse, IconButton, Snackbar } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\nimport axios from 'axios';\n\nconst MOCK_MESSAGES = [\n  { from: 'Her', text: 'Hey, what are you up to?' },\n  { from: 'Me', text: 'Just chilling, you?' },\n  { from: 'Her', text: 'Same here! Got any plans for the weekend?' },\n];\n\nconst TONE_OPTIONS = [\n  { value: 'flirty', label: 'Flirty' },\n  { value: 'friendly', label: 'Friendly' },\n  { value: 'serious', label: 'Serious' },\n  { value: 'custom', label: 'Custom...' },\n];\nconst GOAL_OPTIONS = [\n  { value: 'get_date', label: 'Get a date' },\n  { value: 'keep_friendly', label: 'Keep it friendly' },\n  { value: 'just_chat', label: 'Just chat' },\n  { value: 'custom', label: 'Custom...' },\n];\n\n// Add color variables for avatars\nconst GIRL_COLOR = '#ec4899'; // pink\nconst BOY_COLOR = '#3B82F6'; // blue\n\nconst PhotoAIResponse = () => {\n  const [photo, setPhoto] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [analyzeSuccess, setAnalyzeSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [aiReplies, setAiReplies] = useState([]);\n  const [conversation, setConversation] = useState([]);\n  const [error, setError] = useState('');\n  const [tone, setTone] = useState('flirty');\n  const [customTone, setCustomTone] = useState('');\n  const [goal, setGoal] = useState('just_chat');\n  const [customGoal, setCustomGoal] = useState('');\n  const [toast, setToast] = useState({ open: false, message: '', type: 'info', icon: null });\n  const [expanded, setExpanded] = useState([]); // for AI suggestions\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editingText, setEditingText] = useState('');\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [dragOverIndex, setDragOverIndex] = useState(null);\n  const toastTimeout = useRef();\n\n  const showToast = (message, type = 'info', icon = null) => {\n    setToast({ open: true, message, type, icon });\n    clearTimeout(toastTimeout.current);\n    toastTimeout.current = setTimeout(() => setToast({ ...toast, open: false }), 3500);\n  };\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text);\n    showToast('Copied to clipboard!', 'success', <CheckCircleIcon sx={{ color: 'var(--success)' }} />);\n  };\n\n  const handleExpand = (idx) => {\n    setExpanded((prev) => prev.includes(idx) ? prev.filter(i => i !== idx) : [...prev, idx]);\n  };\n\n  const handleEditMessage = (index) => {\n    setEditingMessageId(index);\n    setEditingText(conversation[index].text);\n  };\n\n  const handleSaveMessage = () => {\n    const updated = [...conversation];\n    updated[editingMessageId] = { ...updated[editingMessageId], text: editingText };\n    setConversation(updated);\n    setEditingMessageId(null);\n    setEditingText('');\n    showToast('Message updated! Click \"Regenerate Replies\" to get new AI suggestions.', 'success');\n  };\n\n  const handleCancelEdit = () => {\n    setEditingMessageId(null);\n    setEditingText('');\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSaveMessage();\n    } else if (e.key === 'Escape') {\n      handleCancelEdit();\n    }\n  };\n\n  const handleDeleteMessage = (index) => {\n    const updated = conversation.filter((_, i) => i !== index);\n    setConversation(updated);\n    showToast('Message deleted!', 'success');\n  };\n\n  const handleAddMessage = () => {\n    const newMessage = { from: 'Girl', text: 'New message...' };\n    setConversation([...conversation, newMessage]);\n    // Immediately edit the new message\n    setTimeout(() => {\n      handleEditMessage(conversation.length);\n    }, 100);\n  };\n\n  // Drag and drop functions\n  const handleDragStart = (e, index) => {\n    setDraggedItem(index);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e, index) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    setDragOverIndex(index);\n  };\n\n  const handleDragLeave = () => {\n    setDragOverIndex(null);\n  };\n\n  const handleDrop = (e, dropIndex) => {\n    e.preventDefault();\n    if (draggedItem === null) return;\n    \n    const updated = [...conversation];\n    const draggedMessage = updated[draggedItem];\n    updated.splice(draggedItem, 1);\n    updated.splice(dropIndex, 0, draggedMessage);\n    \n    setConversation(updated);\n    setDraggedItem(null);\n    setDragOverIndex(null);\n    showToast('Message reordered!', 'success');\n  };\n\n  const handleRegenerateReplies = async () => {\n    if (conversation.length === 0) {\n      setError('No conversation to regenerate replies for.');\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    setAiReplies([]);\n    \n    const formData = new FormData();\n    formData.append('conversation', JSON.stringify(conversation));\n    formData.append('tone', tone === 'custom' ? customTone : tone);\n    formData.append('goal', goal === 'custom' ? customGoal : goal);\n    formData.append('regenerate', 'true');\n    \n    try {\n      const response = await axios.post('https://3e79a6ace678.ngrok-free.app/api/regenerate-replies', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      const { reply_1, reply_2, reply_3 } = response.data;\n      console.log('=== REGENERATE DEBUGGING ===');\n      console.log('Regenerated replies received:', { reply_1, reply_2, reply_3 });\n      console.log('Full response data:', response.data);\n      \n      // Check each reply individually\n      console.log('Reply 1 check:', reply_1, 'Type:', typeof reply_1, 'Length:', reply_1?.length, 'Boolean:', Boolean(reply_1));\n      console.log('Reply 2 check:', reply_2, 'Type:', typeof reply_2, 'Length:', reply_2?.length, 'Boolean:', Boolean(reply_2));\n      console.log('Reply 3 check:', reply_3, 'Type:', typeof reply_3, 'Length:', reply_3?.length, 'Boolean:', Boolean(reply_3));\n      \n      console.log('Raw array before filter:', [reply_1, reply_2, reply_3]);\n      const filteredReplies = [reply_1, reply_2, reply_3].filter(Boolean);\n      console.log('Filtered regenerated replies:', filteredReplies);\n      console.log('Number of filtered replies:', filteredReplies.length);\n      console.log('=== END DEBUGGING ===');\n      \n      setAiReplies(filteredReplies);\n      showToast(`${filteredReplies.length} new AI replies generated!`, 'success');\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to regenerate AI responses');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setPhoto(file);\n      setUploadSuccess(true);\n      setAnalyzeSuccess(false);\n      setError('');\n      setAiReplies([]);\n      setConversation([]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!photo) {\n      setError('Please upload a photo.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setAiReplies([]);\n    setConversation([]);\n    setAnalyzeSuccess(false);\n    const formData = new FormData();\n    formData.append('photo', photo);\n    formData.append('tone', tone === 'custom' ? customTone : tone);\n    formData.append('goal', goal === 'custom' ? customGoal : goal);\n    try {\n      const response = await axios.post('https://3e79a6ace678.ngrok-free.app/api/photo-ai-response', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      const { conversation, reply_1, reply_2, reply_3 } = response.data;\n      console.log('=== ORIGINAL PHOTO ANALYSIS DEBUGGING ===');\n      console.log('Frontend received:', { reply_1, reply_2, reply_3 });\n      console.log('Full original response data:', response.data);\n      \n      // Check each reply individually\n      console.log('Original Reply 1 check:', reply_1, 'Type:', typeof reply_1, 'Length:', reply_1?.length, 'Boolean:', Boolean(reply_1));\n      console.log('Original Reply 2 check:', reply_2, 'Type:', typeof reply_2, 'Length:', reply_2?.length, 'Boolean:', Boolean(reply_2));\n      console.log('Original Reply 3 check:', reply_3, 'Type:', typeof reply_3, 'Length:', reply_3?.length, 'Boolean:', Boolean(reply_3));\n      \n      console.log('Raw original array before filter:', [reply_1, reply_2, reply_3]);\n      const filteredReplies = [reply_1, reply_2, reply_3].filter(Boolean);\n      console.log('Filtered replies:', filteredReplies);\n      console.log('Number of original filtered replies:', filteredReplies.length);\n      console.log('=== END ORIGINAL DEBUGGING ===');\n      \n      setConversation(conversation || []);\n      setAiReplies(filteredReplies);\n      setAnalyzeSuccess(true);\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to get AI responses');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', background: 'none' }}>\n      <Box className=\"glass-card\" sx={{ width: '100%', maxWidth: 900, mx: 'auto', mt: 6, mb: 6 }}>\n        <Typography className=\"glass-section-header\" sx={{ fontSize: 28, fontWeight: 600, mb: 3 }}>Photo AI Assistant</Typography>\n        \n        <form onSubmit={handleSubmit} style={{ display: 'flex', flexWrap: 'wrap', gap: 24, alignItems: 'flex-end', marginBottom: 32 }}>\n            <FormControl fullWidth className=\"glass-select\" sx={{ minWidth: 180, flex: 1 }}>\n              <InputLabel id=\"tone-label\">Tone</InputLabel>\n              <Select labelId=\"tone-label\" value={tone} label=\"Tone\" onChange={e => setTone(e.target.value)}>\n                {TONE_OPTIONS.map(opt => (\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {tone === 'custom' && (\n              <TextField fullWidth label=\"Custom Tone\" value={customTone} onChange={e => setCustomTone(e.target.value)} sx={{ flex: 1 }} />\n            )}\n            <FormControl fullWidth className=\"glass-select\" sx={{ minWidth: 200, flex: 2 }}>\n              <InputLabel id=\"goal-label\">Conversation Goal</InputLabel>\n              <Select labelId=\"goal-label\" value={goal} label=\"Conversation Goal\" onChange={e => setGoal(e.target.value)}>\n                {GOAL_OPTIONS.map(opt => (\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {goal === 'custom' && (\n              <TextField fullWidth label=\"Custom Conversation Goal\" value={customGoal} onChange={e => setCustomGoal(e.target.value)} sx={{ flex: 2 }} />\n            )}\n            <Button variant=\"contained\" component=\"label\" className=\"glass-btn\" sx={{ minWidth: 180, height: 48, mb: 0 }}>\n              Upload Photo\n              <input type=\"file\" accept=\"image/*\" hidden onChange={handlePhotoChange} />\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" className=\"glass-btn\" disabled={loading || !photo} sx={{ minWidth: 180, height: 48, mb: 0, position: 'relative' }}>\n              {loading ? <CircularProgress size={24} sx={{ color: 'var(--accent-blue)' }} /> : 'Analyze Photo & Get AI Replies'}\n            </Button>\n          </form>\n        \n          {loading && <LinearProgress sx={{ mb: 2, borderRadius: 2 }} />}\n        \n        <Snackbar \n          open={toast.open} \n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }} \n          onClose={() => setToast({ ...toast, open: false })} \n          autoHideDuration={3500} \n          className=\"glass-toast\"\n          sx={{ top: '80px !important' }}\n        >\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              {toast.icon || <InfoOutlinedIcon sx={{ color: 'var(--accent-blue)' }} />}\n              <Typography sx={{ fontSize: 16, color: 'var(--primary-text)' }}>{toast.message}</Typography>\n            </Box>\n          </Snackbar>\n        \n          {error && <Box className=\"glass-toast\" sx={{ background: 'rgba(245, 158, 11, 0.15)', border: '1px solid var(--warning)', color: 'var(--warning)', mb: 2 }}><InfoOutlinedIcon sx={{ color: 'var(--warning)' }} /> {error}</Box>}\n        \n          {(conversation.length > 0 || aiReplies.length > 0) && (\n            <>\n              {/* Conversation Analysis */}\n            <Box className=\"glass-card\" sx={{ p: 3, mb: 3, mt: 3, background: 'rgba(255, 255, 255, 0.1)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)', borderRadius: '12px' }}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                <Typography className=\"glass-section-header\">Conversation Analysis</Typography>\n                <Button\n                  variant=\"outlined\"\n                  size=\"small\"\n                  startIcon={<AddIcon />}\n                  onClick={handleAddMessage}\n                  sx={{ color: 'var(--accent-blue)', borderColor: 'var(--accent-blue)' }}\n                >\n                  Add Message\n                </Button>\n              </Box>\n              \n                <Box className=\"glass-chat\">\n                  {conversation.map((msg, i) => {\n                    const msgText = typeof msg.text === 'string' ? msg.text : msg.text?.text || '';\n                    const isGirl = msg.from.toLowerCase() === 'girl';\n                    const avatarColor = isGirl ? GIRL_COLOR : BOY_COLOR;\n                    const label = isGirl ? 'Girl' : 'Boy';\n                  const isEditing = editingMessageId === i;\n                  const isDragging = draggedItem === i;\n                  const isDropTarget = dragOverIndex === i && draggedItem !== null && draggedItem !== i;\n                  \n                    return (\n                    <Box key={i}>\n                      {/* Drop indicator line at the top */}\n                      {isDropTarget && (\n                        <Box sx={{\n                          height: '2px',\n                          background: 'var(--accent-blue)',\n                          borderRadius: '1px',\n                          mb: 1,\n                          boxShadow: '0 0 8px var(--accent-blue)'\n                        }} />\n                      )}\n                      \n                      <Box \n                        sx={{ \n                          display: 'flex', \n                          alignItems: 'flex-start',\n                          mb: 2,\n                          position: 'relative',\n                          gap: 1,\n                          opacity: isDragging ? 0.3 : 1,\n                          transition: 'opacity 0.2s'\n                        }}\n                        onDragOver={(e) => handleDragOver(e, i)}\n                        onDragLeave={handleDragLeave}\n                        onDrop={(e) => handleDrop(e, i)}\n                      >\n                        {/* Drag handle - left for Girl, right for Boy */}\n                        {isGirl && (\n                          <Box\n                            sx={{ \n                              display: 'flex',\n                              alignItems: 'center',\n                              mt: 1,\n                              opacity: 0.5,\n                              '&:hover': { opacity: 1 },\n                              cursor: isDragging ? 'grabbing' : 'grab'\n                            }}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, i)}\n                          >\n                            <DragIndicatorIcon sx={{ fontSize: 16, color: 'var(--primary-text)' }} />\n                          </Box>\n                        )}\n\n                                                  {/* Main message area */}\n                          <Box sx={{ \n                            display: 'flex', \n                            flexDirection: 'column', \n                            alignItems: isGirl ? 'flex-start' : 'flex-end', \n                            flex: 1\n                          }}>\n                          {/* Avatar and name */}\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5, gap: 1 }}>\n                            <Box sx={{ width: 16, height: 16, borderRadius: '50%', background: avatarColor, boxShadow: '0 1px 4px rgba(0,0,0,0.12)' }} />\n                          <Typography sx={{ fontSize: 14, fontWeight: 500, color: avatarColor, opacity: 0.85 }}>{label}</Typography>\n                        </Box>\n\n                                                      {/* Message bubble with inline editing */}\n                            <Box sx={{ \n                              position: 'relative', \n                              display: 'flex', \n                              alignItems: 'center', \n                              gap: 1\n                            }}>\n                            {isEditing ? (\n                              <TextField\n                                multiline\n                                value={editingText}\n                                onChange={(e) => setEditingText(e.target.value)}\n                                onKeyDown={handleKeyPress}\n                                autoFocus\n                                sx={{\n                                  '& .MuiOutlinedInput-root': {\n                                    color: 'var(--primary-text)',\n                                    background: 'rgba(255, 255, 255, 0.1)',\n                                    backdropFilter: 'blur(10px)',\n                                    border: '1px solid rgba(255, 255, 255, 0.2)',\n                                    borderRadius: '12px',\n                                    minWidth: '200px',\n                                    maxWidth: '400px'\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <Box className={`glass-bubble ${isGirl ? 'girl' : 'boy'}`}>\n                                {msgText}\n                              </Box>\n                            )}\n\n                                                          {/* Edit controls */}\n                              <Box sx={{ \n                                display: 'flex', \n                                flexDirection: 'column',\n                                gap: 0.5,\n                                opacity: 0.5,\n                                '&:hover': { opacity: 1 }\n                              }}>\n                                {isEditing ? (\n                                  <>\n                                    <IconButton\n                                      size=\"small\"\n                                      onClick={handleSaveMessage}\n                                      sx={{ \n                                        color: 'var(--success)', \n                                        '&:hover': { color: 'var(--success-dark)' }\n                                      }}\n                                    >\n                                      <SaveIcon fontSize=\"small\" />\n                                    </IconButton>\n                                    <IconButton\n                                      size=\"small\"\n                                      onClick={handleCancelEdit}\n                                      sx={{ \n                                        color: 'var(--error)', \n                                        '&:hover': { opacity: 1 }\n                                      }}\n                                    >\n                                      <CancelIcon fontSize=\"small\" />\n                                    </IconButton>\n                                  </>\n                                ) : (\n                                  <>\n                                    <IconButton\n                                      size=\"small\"\n                                      onClick={() => handleEditMessage(i)}\n                                      sx={{ \n                                        color: 'var(--primary-text)', \n                                        '&:hover': { color: 'var(--accent-blue)' }\n                                      }}\n                                    >\n                                      <EditIcon fontSize=\"small\" />\n                                    </IconButton>\n                                    <IconButton\n                                      size=\"small\"\n                                      onClick={() => handleDeleteMessage(i)}\n                                      sx={{ \n                                        color: 'var(--error)', \n                                        '&:hover': { opacity: 1 }\n                                      }}\n                                    >\n                                      <DeleteIcon fontSize=\"small\" />\n                                    </IconButton>\n                                  </>\n                                )}\n                              </Box>\n                            </Box>\n                          </Box>\n\n                        {/* Drag handle for Boy messages on the right */}\n                        {!isGirl && (\n                          <Box\n                            sx={{ \n                              display: 'flex',\n                              alignItems: 'center',\n                              mt: 1,\n                              opacity: 0.5,\n                              '&:hover': { opacity: 1 },\n                              cursor: isDragging ? 'grabbing' : 'grab'\n                            }}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, i)}\n                          >\n                            <DragIndicatorIcon sx={{ fontSize: 16, color: 'var(--primary-text)' }} />\n                          </Box>\n                        )}\n                      </Box>\n                      </Box>\n                    );\n                  })}\n                </Box>\n              </Box>\n              {/* AI Suggestions */}\n            <Box className=\"glass-card\" sx={{ p: 3, mb: 3, mt: 2, background: 'rgba(255, 255, 255, 0.1)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)', borderRadius: '12px' }}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                <Typography className=\"glass-section-header\">AI Suggestions ({aiReplies.length})</Typography>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  startIcon={<RefreshIcon />}\n                  onClick={handleRegenerateReplies}\n                  disabled={loading || conversation.length === 0}\n                  sx={{ \n                    backgroundColor: 'var(--accent-blue)', \n                    '&:hover': { backgroundColor: 'var(--accent-blue-dark)' },\n                    '&:disabled': { opacity: 0.5 }\n                  }}\n                >\n                  Regenerate Replies\n                </Button>\n              </Box>\n                {aiReplies.map((reply, i) => {\n                  const replyText = typeof reply === 'string' ? reply : reply?.text || '';\n                  const isLong = replyText.length > 120;\n                  return (\n                    <Collapse in={expanded.includes(i) || !isLong} key={i} timeout={400} sx={{ animationDelay: `${i * 100}ms` }}>\n                      <Box className=\"glass-suggestion-card\">\n                        <Typography sx={{ flex: 1, fontSize: 16, color: 'var(--primary-text)' }}>\n                          {isLong && !expanded.includes(i) ? replyText.slice(0, 120) + '...' : replyText}\n                        </Typography>\n                        {isLong && (\n                          <IconButton onClick={() => handleExpand(i)} size=\"small\" sx={{ color: 'var(--accent-blue)' }}>\n                            {expanded.includes(i) ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                          </IconButton>\n                        )}\n                        <IconButton onClick={() => handleCopy(replyText)} size=\"small\" className=\"glass-copy-btn\" aria-label=\"Copy suggestion\">\n                          <ContentCopyIcon />\n                        </IconButton>\n                      </Box>\n                    </Collapse>\n                  );\n                })}\n              </Box>\n            </>\n          )}\n\n\n      </Box>\n    </Box>\n  );\n};\n\nexport default PhotoAIResponse; "],"names":["TONE_OPTIONS","value","label","GOAL_OPTIONS","PhotoAIResponse","photo","setPhoto","useState","uploadSuccess","setUploadSuccess","analyzeSuccess","setAnalyzeSuccess","loading","setLoading","aiReplies","setAiReplies","conversation","setConversation","error","setError","tone","setTone","customTone","setCustomTone","goal","setGoal","customGoal","setCustomGoal","toast","setToast","open","message","type","icon","expanded","setExpanded","editingMessageId","setEditingMessageId","editingText","setEditingText","draggedItem","setDraggedItem","dragOverIndex","setDragOverIndex","toastTimeout","useRef","showToast","arguments","length","undefined","clearTimeout","current","setTimeout","handleEditMessage","index","text","handleSaveMessage","updated","handleCancelEdit","handleKeyPress","e","key","shiftKey","preventDefault","handleDragStart","dataTransfer","effectAllowed","handleDragLeave","_jsx","Box","sx","minHeight","display","alignItems","justifyContent","background","children","_jsxs","className","width","maxWidth","mx","mt","mb","Typography","fontSize","fontWeight","onSubmit","async","formData","FormData","append","response","axios","post","headers","reply_1","reply_2","reply_3","data","console","log","Boolean","filteredReplies","filter","err","_err$response2","_err$response2$data","style","flexWrap","gap","marginBottom","FormControl","fullWidth","minWidth","flex","InputLabel","id","Select","labelId","onChange","target","map","opt","MenuItem","TextField","Button","variant","component","height","accept","hidden","file","files","disabled","position","CircularProgress","size","color","LinearProgress","borderRadius","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","top","InfoOutlinedIcon","border","_Fragment","p","backdropFilter","startIcon","AddIcon","onClick","handleAddMessage","from","borderColor","msg","i","_msg$text","msgText","isGirl","toLowerCase","avatarColor","isEditing","isDragging","isDropTarget","boxShadow","opacity","transition","onDragOver","handleDragOver","dropEffect","onDragLeave","onDrop","handleDrop","dropIndex","draggedMessage","splice","cursor","draggable","onDragStart","DragIndicatorIcon","flexDirection","multiline","onKeyDown","autoFocus","IconButton","SaveIcon","CancelIcon","EditIcon","_","handleDeleteMessage","DeleteIcon","RefreshIcon","JSON","stringify","_err$response","_err$response$data","backgroundColor","reply","replyText","isLong","Collapse","in","includes","timeout","animationDelay","slice","handleExpand","idx","prev","ExpandLessIcon","ExpandMoreIcon","handleCopy","navigator","clipboard","writeText","CheckCircleIcon","ContentCopyIcon"],"sourceRoot":""}